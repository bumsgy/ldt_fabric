#
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

networks:
  basic:

services:
  zk1:
    image: hyperledger/fabric-zookeeper${THIRDPARTY_IMG_TAG}
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zk1:2888:3888 server.2=zk2:2888:3888 server.3=zk3:2888:3888
      - ZOO_TICK_TIME=2000
      - ZOO_INIT_LIMIT=10
      - ZOO_SYNC_LIMIT=5
    container_name: zk1
    networks:
      - basic

  zk2:
    image: hyperledger/fabric-zookeeper${THIRDPARTY_IMG_TAG}
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zk1:2888:3888 server.2=zk2:2888:3888 server.3=zk3:2888:3888
      - ZOO_TICK_TIME=2000
      - ZOO_INIT_LIMIT=10
      - ZOO_SYNC_LIMIT=5
    container_name: zk2
    networks:
      - basic

  zk3:
    image: hyperledger/fabric-zookeeper${THIRDPARTY_IMG_TAG}
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zk1:2888:3888 server.2=zk2:2888:3888 server.3=zk3:2888:3888
      - ZOO_TICK_TIME=2000
      - ZOO_INIT_LIMIT=10
      - ZOO_SYNC_LIMIT=5
    container_name: zk3
    networks:
      - basic

  kafka0:
    image: hyperledger/fabric-kafka${THIRDPARTY_IMG_TAG}
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_MESSAGE_MAX_BYTES=50000000
      - KAFKA_REPLICA_FETCH_MAX_BYTES=50000000
      - KAFKA_PRODUCER_MAX_REQUEST_SIZE=50000000
      - KAFKA_CONSUMER_MAX_PARTITION_FETCH_BYTES=50000000
      - CONNECT_PRODUCER_MAX_REQUEST_SIZE=50000000
      - CONNECT_CONSUMER_MAX_PARTITION_FETCH_BYTES=50000000
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zk1:2181,zk2:2181,zk3:2181
    container_name: kafka0
    networks:
      - basic
    links:
      - zk1:zk1
      - zk2:zk2
      - zk3:zk3

  kafka1:
    image: hyperledger/fabric-kafka${THIRDPARTY_IMG_TAG}
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_MESSAGE_MAX_BYTES=50000000
      - KAFKA_REPLICA_FETCH_MAX_BYTES=50000000
      - KAFKA_PRODUCER_MAX_REQUEST_SIZE=50000000
      - KAFKA_CONSUMER_MAX_PARTITION_FETCH_BYTES=50000000
      - CONNECT_PRODUCER_MAX_REQUEST_SIZE=50000000
      - CONNECT_CONSUMER_MAX_PARTITION_FETCH_BYTES=50000000
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zk1:2181,zk2:2181,zk3:2181
    container_name: kafka1
    networks:
      - basic
    links:
      - zk1:zk1
      - zk2:zk2
      - zk3:zk3

  kafka2:
    image: hyperledger/fabric-kafka${THIRDPARTY_IMG_TAG}
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_MESSAGE_MAX_BYTES=50000000
      - KAFKA_REPLICA_FETCH_MAX_BYTES=50000000
      - KAFKA_PRODUCER_MAX_REQUEST_SIZE=50000000
      - KAFKA_CONSUMER_MAX_PARTITION_FETCH_BYTES=50000000
      - CONNECT_PRODUCER_MAX_REQUEST_SIZE=50000000
      - CONNECT_CONSUMER_MAX_PARTITION_FETCH_BYTES=50000000
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zk1:2181,zk2:2181,zk3:2181
    container_name: kafka2
    networks:
      - basic
    links:
      - zk1:zk1
      - zk2:zk2
      - zk3:zk3

  kafka3:
    image: hyperledger/fabric-kafka${THIRDPARTY_IMG_TAG}
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_MESSAGE_MAX_BYTES=50000000
      - KAFKA_REPLICA_FETCH_MAX_BYTES=50000000
      - KAFKA_PRODUCER_MAX_REQUEST_SIZE=50000000
      - KAFKA_CONSUMER_MAX_PARTITION_FETCH_BYTES=50000000
      - CONNECT_PRODUCER_MAX_REQUEST_SIZE=50000000
      - CONNECT_CONSUMER_MAX_PARTITION_FETCH_BYTES=50000000
      - KAFKA_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_ZOOKEEPER_CONNECT=zk1:2181,zk2:2181,zk3:2181
    container_name: kafka3
    networks:
      - basic
    links:
      - zk1:zk1
      - zk2:zk2
      - zk3:zk3

  ca.org1.example.com:
    image: hyperledger/fabric-ca${DOCKER_IMG_TAG}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-org1
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/a4034172cf9576f1ad37e499f6f80490d297196c186fa552a96d22196868d132_sk
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/a4034172cf9576f1ad37e499f6f80490d297196c186fa552a96d22196868d132_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg1
    networks:
      - basic

  ca.org2.example.com:
    image: hyperledger/fabric-ca${DOCKER_IMG_TAG}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-org2
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/441697e8bcf39f799abba2b74d8ca948c5e2b7486ae99935fb2f4654869ed837_sk
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/441697e8bcf39f799abba2b74d8ca948c5e2b7486ae99935fb2f4654869ed837_sk
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerOrg2
    networks:
      - basic

  orderer0.example.com:
    container_name: orderer0.example.com
    image: hyperledger/fabric-orderer${DOCKER_IMG_TAG}
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/crypto/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/crypto/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/crypto/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/crypto/orderer/tls/ca.crt, /etc/hyperledger/crypto/peerOrg1/tls/ca.crt, /etc/hyperledger/crypto/peerOrg2/tls/ca.crt]
      - ORDERER_OPERATIONS_TLS_ENABLED=false
      - ORDERER_OPERATIONS_LISTENADDRESS=:9443
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderers
    command: orderer
    ports:
      - 7050:7050
      - 9443:9443
    volumes:
        - ./channel-artifacts/:/etc/hyperledger/configtx
        - ./crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/:/etc/hyperledger/crypto/orderer
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/crypto/peerOrg1
        - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/crypto/peerOrg2
    networks:
      - basic

  orderer1.example.com:
    container_name: orderer1.example.com
    image: hyperledger/fabric-orderer${DOCKER_IMG_TAG}
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/crypto/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/crypto/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/crypto/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/crypto/orderer/tls/ca.crt, /etc/hyperledger/crypto/peerOrg1/tls/ca.crt, /etc/hyperledger/crypto/peerOrg2/tls/ca.crt]
      - ORDERER_OPERATIONS_TLS_ENABLED=false
      - ORDERER_OPERATIONS_LISTENADDRESS=:9443
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderers
    command: orderer
    ports:
      - 8050:7050
      - 9444:9443
    volumes:
      - ./channel-artifacts/:/etc/hyperledger/configtx
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/:/etc/hyperledger/crypto/orderer
      - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/crypto/peerOrg1
      - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/crypto/peerOrg2
    networks:
      - basic

  orderer2.example.com:
    container_name: orderer2.example.com
    image: hyperledger/fabric-orderer${DOCKER_IMG_TAG}
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/crypto/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/crypto/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/crypto/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/crypto/orderer/tls/ca.crt, /etc/hyperledger/crypto/peerOrg1/tls/ca.crt, /etc/hyperledger/crypto/peerOrg2/tls/ca.crt]
      - ORDERER_OPERATIONS_TLS_ENABLED=false
      - ORDERER_OPERATIONS_LISTENADDRESS=:9443
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderers
    command: orderer
    ports:
      - 9050:7050
      - 9445:9443
    volumes:
      - ./channel-artifacts/:/etc/hyperledger/configtx
      - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/:/etc/hyperledger/crypto/orderer
      - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/crypto/peerOrg1
      - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/crypto/peerOrg2
    networks:
      - basic

  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends:
      file:   base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_OPERATIONS_TLS_ENABLED=false
      - CORE_OPERATIONS_LISTENADDRESS=:9443
      - CORE_METRICS_PROVIDER=prometheus
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0.example.com:5984
    ports:
      - 7051:7051
      - 7053:7053
      - 9446:9443
    volumes:
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/crypto/peer
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - orderer2.example.com
      - couchdb0.example.com
    networks:
      - basic

  couchdb0.example.com:
    container_name: couchdb0.example.com
    image: hyperledger/fabric-couchdb${THIRDPARTY_IMG_TAG}
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - basic

  peer1.org1.example.com:
    container_name: peer1.org1.example.com
    extends:
      file:   base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.org1.example.com
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_ADDRESS=peer1.org1.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:7051
      - CORE_OPERATIONS_TLS_ENABLED=false
      - CORE_OPERATIONS_LISTENADDRESS=:9443
      - CORE_METRICS_PROVIDER=prometheus
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1.example.com:5984
    ports:
      - 7056:7051
      - 7058:7053
      - 9447:9443
    volumes:
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/:/etc/hyperledger/crypto/peer
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - orderer2.example.com
      - couchdb1.example.com
    networks:
      - basic

  couchdb1.example.com:
    container_name: couchdb1.example.com
    image: hyperledger/fabric-couchdb${THIRDPARTY_IMG_TAG}
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5985:5984
    networks:
      - basic

  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    extends:
      file:   base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org2.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051
      - CORE_OPERATIONS_TLS_ENABLED=false
      - CORE_OPERATIONS_LISTENADDRESS=:9443
      - CORE_METRICS_PROVIDER=prometheus
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2.example.com:5984
    ports:
      - 8051:7051
      - 8053:7053
      - 9448:9443
    volumes:
        - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/crypto/peer
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - orderer2.example.com
      - couchdb2.example.com
    networks:
      - basic

  couchdb2.example.com:
    container_name: couchdb2.example.com
    image: hyperledger/fabric-couchdb${THIRDPARTY_IMG_TAG}
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5986:5984
    networks:
      - basic

  peer1.org2.example.com:
    container_name: peer1.org2.example.com
    extends:
      file:   base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.org2.example.com
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_ADDRESS=peer1.org2.example.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org2.example.com:7051
      - CORE_OPERATIONS_TLS_ENABLED=false
      - CORE_OPERATIONS_LISTENADDRESS=:9443
      - CORE_METRICS_PROVIDER=prometheus
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3.example.com:5984
    ports:
      - 8056:7051
      - 8058:7053
      - 9449:9443
    volumes:
        - ./crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/:/etc/hyperledger/crypto/peer
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - orderer2.example.com
      - couchdb3.example.com
    networks:
      - basic

  couchdb3.example.com:
    container_name: couchdb3.example.com
    image: hyperledger/fabric-couchdb${THIRDPARTY_IMG_TAG}
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5987:5984
    networks:
      - basic

  org1-cli:
    container_name: org1-cli
    image: hyperledger/fabric-tools${DOCKER_IMG_TAG}
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=debug
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./channel-artifacts/:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
      - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
      - ./cli:/opt/gopath/src/github.com/hyperledger/fabric/peer/cli
      - ../../chaincodes:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go
      - ./:/opt/gopath/src/github.com/hyperledger/fabric/peer
    depends_on:
      - orderer0.example.com
      - peer0.org1.example.com
    networks:
      - basic

  org2-cli:
    container_name: org2-cli
    image: hyperledger/fabric-tools${DOCKER_IMG_TAG}
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=debug
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./channel-artifacts/:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
      - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
      - ./cli:/opt/gopath/src/github.com/hyperledger/fabric/peer/cli
      - ../../chaincodes:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go
      - ./:/opt/gopath/src/github.com/hyperledger/fabric/peer
    depends_on:
      - orderer0.example.com
      - peer0.org2.example.com
    networks:
      - basic

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v1.7.0
    entrypoint: /bin/prometheus
    command: "-log.level=\"debug\" -config.file=/etc/custom/prometheus.yml -storage.local.path=/prometheus -web.console.libraries=/etc/prometheus/console_libraries -web.console.templates=/etc/prometheus/consoles"
    ports:
      - 9090:9090
    volumes:
      - ./monitor:/etc/custom
    depends_on:
      - orderer0.example.com
      - orderer1.example.com
      - orderer2.example.com
      - peer0.org1.example.com
      - peer1.org1.example.com
      - peer0.org2.example.com
      - peer1.org2.example.com
    networks:
      - basic

  grafana:
    container_name: grafana
    image: grafana/grafana:5.1.0
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=pass
    links:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - basic
